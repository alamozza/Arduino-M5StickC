#include <M5StickC.h>
#include <WiFi.h>
#include <WiFiClient.h>
#include "time.h"
#include <BlynkSimpleEsp32.h>
#include <IRremoteESP8266.h>
#include <IRsend.h>

#define BLYNK_PRINT Serial
const char* auth   = "*****************************"; //pls input Auth Token
const char* ssid     = "**********";  //pls input ssid info
const char* password = "**********";  //pls input passwd info

// turn-on signal for my Toshiba AirConditioner
const uint16_t ac_power_on[327] = {4362, 4520,  514, 1650,  510, 1652,  508, 1654,  508, 1650,  510, 574,  508, 572,  510, 1652,  510, 586,  508, 576,  506, 576,  504, 602,  482, 574,  506, 1652,  510, 1652,  508, 574,  508, 1664,  510, 574,  508, 574,  508, 574,  508, 576,  506, 574,  508, 1654,  508, 572,  510, 586,  510, 1654,  508, 1652,  510, 1678,  482, 1652,  510, 1652,  508, 574,  510, 1652,  510, 1664,  510, 572,  508, 578,  504, 574,  508, 572,  510, 1652,  508, 574,  508, 578,  504, 1664,  510, 1652,  508, 572,  510, 574,  508, 576,  506, 572,  510, 574,  508, 574,  506, 586,  510, 574,  504, 574,  508, 576,  508, 574,  508, 572,  508, 574,  506, 574,  508, 1664,  508, 574,  508, 574,  508, 572,  508, 574,  508, 572,  508, 574,  510, 572,  508, 586,  508, 574,  510, 574,  508, 1652,  510, 1652,  510, 574,  508, 572,  508, 574,  508, 584,  510, 1650,  510, 574,  508, 1628,  532, 1652,  510, 1652,  508, 576,  506, 574,  510, 604,  482, 8050,  4392, 4500,  534, 1652,  508, 1652,  508, 1682,  482, 1652,  508, 574,  508, 572,  510, 1654,  508, 588,  506, 574,  508, 572,  508, 574,  508, 572,  508, 1652,  510, 1652,  508, 574,  508, 1666,  508, 576,  506, 576,  504, 574,  508, 574,  508, 574,  506, 1630,  532, 574,  508, 586,  506, 1654,  508, 1652,  508, 1652,  510, 1652,  510, 1658,  504, 574,  506, 1652,  508, 1666,  508, 574,  508, 574,  506, 576,  504, 576,  506, 1654,  508, 572,  508, 576,  506, 1666,  508, 1654,  508, 578,  504, 574,  508, 572,  510, 576,  506, 574,  508, 574,  510, 586,  508, 574,  506, 576,  506, 574,  508, 576,  508, 574,  508, 574,  506, 576,  506, 1642,  532, 576,  506, 576,  506, 574,  508, 576,  506, 574,  506, 576,  508, 574,  508, 588,  506, 578,  504, 574,  508, 1654,  508, 1654,  508, 574,  506, 576,  506, 576,  508, 588,  506, 1654,  506, 574,  508, 1652,  508, 1654,  508, 1654,  508, 574,  506, 578,  506, 578,  508};
// turn-off signal for my Toshiba AirConditioner
const uint16_t ac_power_off[911] = {4366, 4444,  590, 1626,  536, 1650,  512, 1650,  512, 1650,  510, 572,  510, 572,  508, 1652,  510, 584,  510, 570,  512, 572,  510, 572,  510, 570,  510, 1654,  508, 1650,  510, 572,  510, 1638,  536, 570,  512, 572,  510, 572,  510, 570,  512, 572,  510, 1650,  510, 572,  508, 612,  484, 1652,  510, 1652,  510, 1652,  510, 1648,  512, 1650,  510, 574,  508, 1650,  510, 1662,  510, 572,  510, 572,  510, 1650,  512, 572,  508, 572,  510, 1624,  538, 572,  512, 584,  508, 572,  510, 572,  512, 570,  510, 1650,  510, 572,  508, 574,  508, 600,  482, 1664,  510, 572,  510, 598,  484, 1650,  510, 1650,  512, 1652,  508, 570,  510, 570,  510, 584,  512, 574,  508, 572,  510, 1650,  512, 572,  510, 572,  510, 572,  512, 574,  508, 1662,  510, 570,  510, 1652,  512, 572,  508, 572,  510, 1650,  510, 1652,  510, 1652,  510, 1662,  510, 574,  508, 1650,  512, 1650,  512, 572,  510, 570,  512, 574,  508, 1652,  510, 1656,  510, 8044,  4400, 4494,  538, 1650,  512, 1650,  512, 1650,  510, 1654,  508, 570,  510, 574,  508, 1650,  510, 584,  508, 572,  512, 574,  508, 572,  510, 574,  510, 1650,  510, 1652,  510, 572,  510, 1664,  510, 572,  510, 572,  510, 572,  510, 572,  508, 572,  510, 1652,  510, 574,  510, 584,  508, 1652,  510, 1650,  514, 1648,  510, 1650,  510, 1650,  510, 572,  510, 1652,  510, 1664,  510, 572,  510, 572,  510, 1650,  510, 572,  508, 572,  512, 1650,  512, 570,  510, 582,  510, 574,  510, 572,  508, 572,  510, 1650,  512, 570,  510, 574,  510, 572,  510, 1642,  532, 548,  534, 572,  510, 1626,  534, 1652,  512, 1650,  512, 572,  510, 572,  510, 584,  510, 572,  510, 598,  484, 1652,  510, 574,  508, 574,  508, 574,  510, 572,  510, 1662,  510, 574,  508, 1652,  508, 574,  510, 572,  510, 1652,  510, 1650,  512, 1652,  510, 1668,  506, 570,  512, 1650,  512, 1650,  510, 572,  510, 574,  508, 572,  510, 1652,  508, 1658,  510, 10274,  4372, 4520,  512, 1650,  510, 1652,  510, 1652,  510, 1652,  510, 572,  510, 574,  508, 1652,  510, 584,  510, 572,  510, 572,  510, 572,  510, 572,  510, 1652,  510, 1650,  510, 572,  510, 1662,  510, 574,  508, 574,  508, 572,  510, 572,  510, 1650,  510, 1652,  510, 572,  510, 584,  510, 1652,  510, 1652,  510, 1654,  508, 1652,  510, 572,  508, 572,  510, 1650,  510, 1662,  510, 572,  510, 572,  508, 572,  510, 572,  510, 1652,  510, 572,  510, 572,  510, 1662,  512, 572,  508, 1656,  508, 1650,  510, 1652,  512, 570,  508, 1652,  510, 574,  510, 584,  510, 572,  510, 574,  508, 574,  508, 572,  508, 572,  510, 1652,  508, 574,  508, 584,  510, 574,  508, 572,  510, 570,  512, 574,  508, 1650,  512, 572,  510, 572,  508, 584,  510, 572,  508, 572,  508, 574,  508, 572,  510, 1652,  510, 1650,  512, 1652,  510, 586,  508, 572,  510, 572,  510, 1650,  512, 574,  508, 572,  510, 572,  510, 572,  510, 1664,  510, 572,  510, 1652,  510, 574,  510, 1652,  510, 1652,  508, 574,  508, 572,  510, 584,  510, 572,  510, 572,  510, 1652,  510, 572,  510, 574,  510, 570,  508, 574,  510, 1664,  510, 574,  508, 1652,  510, 1652,  510, 572,  508, 1654,  510, 572,  510, 572,  510, 1638,  536, 572,  508, 1654,  510, 572,  510, 1652,  510, 572,  508, 1654,  508, 574,  508, 1662,  510, 572,  510, 572,  510, 572,  510, 574,  508, 1650,  508, 1654,  510, 576,  506, 584,  510, 1652,  510, 572,  510, 572,  510, 1650,  510, 1652,  510, 572,  510, 1652,  510, 1664,  510, 572,  508, 574,  508, 574,  510, 572,  508, 574,  510, 570,  512, 1650,  510, 584,  510, 1650,  510, 574,  508, 574,  510, 572,  508, 1652,  510, 1650,  510, 1654,  508, 578,  510, 8072,  4370, 4522,  512, 1652,  510, 1650,  510, 1652,  510, 1650,  512, 572,  510, 572,  508, 1652,  510, 586,  508, 572,  510, 572,  510, 572,  508, 572,  510, 1650,  512, 1650,  512, 570,  510, 1662,  510, 572,  510, 572,  510, 572,  508, 574,  510, 1650,  512, 1652,  510, 572,  510, 584,  510, 1650,  510, 1652,  510, 1650,  512, 1650,  510, 572,  508, 574,  508, 1652,  510, 1662,  512, 572,  510, 572,  508, 572,  510, 572,  510, 1652,  510, 576,  506, 572,  510, 1662,  512, 570,  508, 1652,  510, 1652,  510, 1652,  510, 572,  510, 1652,  510, 572,  510, 586,  508, 572,  510, 572,  510, 572,  508, 574,  508, 572,  510, 1652,  510, 572,  510, 584,  508, 574,  510, 572,  510, 570,  510, 574,  510, 1652,  510, 572,  510, 574,  506, 584,  510, 572,  510, 570,  510, 576,  506, 570,  510, 1652,  510, 1652,  510, 1652,  508, 584,  510, 574,  506, 574,  508, 1652,  510, 572,  510, 572,  510, 570,  510, 572,  510, 1664,  510, 572,  510, 1650,  510, 572,  510, 1652,  510, 1652,  508, 574,  510, 572,  510, 584,  510, 572,  508, 572,  510, 1652,  510, 574,  508, 572,  508, 574,  510, 572,  508, 1664,  510, 574,  510, 1650,  510, 1652,  510, 572,  510, 1652,  510, 572,  510, 570,  510, 1664,  510, 572,  510, 1654,  508, 574,  508, 1652,  510, 572,  510, 1652,  510, 572,  508, 1620,  554, 574,  508, 572,  510, 572,  508, 574,  508, 1656,  508, 1650,  512, 570,  512, 584,  510, 1652,  510, 572,  508, 572,  510, 1650,  512, 1650,  510, 572,  510, 1650,  510, 1664,  510, 570,  510, 574,  510, 572,  510, 574,  508, 572,  510, 572,  508, 1652,  510, 586,  508, 1652,  510, 574,  508, 572,  510, 574,  508, 1652,  510, 1652,  510, 1652,  510, 578,  508};

const uint16_t kIrLed = 32; // GPIO#32 for transmit the IR signals.
const uint16_t Led = 10; // the LED inside M5StickC
IRsend irsend(kIrLed);

void setup(){
  M5.begin();
  Serial.begin(115200);

  pinMode(GPIO_NUM_10, OUTPUT); //set the GPIO to OUTPUT mode
  digitalWrite(GPIO_NUM_10, LOW); //turn on the LED for 0.5sec
  delay(500);
  digitalWrite(GPIO_NUM_10, HIGH); //turn off the LED permanently
  pinMode(kIrLed, OUTPUT); //set the GPIO to OUTPUT mode
  digitalWrite(kIrLed, HIGH);
  M5.Axp.ScreenBreath(7); // set the LCD backlight darkest
  // M5.Lcd.setRotation(1);

  // start Blynk
  Blynk.begin(auth, ssid, password );
  M5.update();
}

void loop(){
  Blynk.run();
  M5.update();
}

// when getting a signal to turn on the airconditioner from Blynk
BLYNK_WRITE(V0){
  int val = param[0].asInt();
  if(val == 1){
    digitalWrite(Led, LOW); // turn on LED for 0.5sec
    delay(500);
    digitalWrite(Led, HIGH); // turn off LED
    irsend.sendRaw(ac_power_on, sizeof(ac_power_on)/sizeof(int), 38);
  }
}
